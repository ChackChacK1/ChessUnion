services:
  frontend:
    build:
      context: ./frontend
    container_name: my-frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - my-network

  backend:
    build:
      context: .
    container_name: my-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATA_REDIS_HOST=${SPRING_DATA_REDIS_HOST}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_LIFETIME=${JWT_LIFETIME}
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - my-network

  db:
    image: postgres:15
    container_name: my-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my-network

  redis:
    image: redis:7
    container_name: my-redis
    ports:
      - "6379:6379"
    networks:
      - my-network

  redis-insight:
    image: redis/redisinsight:latest
    container_name: my-redis-insight
    ports:
      - "5540:5540"
    depends_on:
      - redis
    networks:
      - my-network

volumes:
  postgres_data:
  redis_insight:

networks:
  my-network:
    driver: bridge
